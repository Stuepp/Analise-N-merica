import numpy as np

def best_line(x, y):
    n = len(x)
    # soma das coordenadas x
    sum_x = sum(x)
    # soma das coordenadas x**2
    sum_x2 = sum(xi ** 2 for xi in x)
    # soma das coordenadas y
    sum_y = sum(y)
    #soma das coordenadas x*y
    sum_xy = sum(xi * yi for xi, yi in zip(x, y))

    # Matriz dos coeficientes
    A = [[n, sum_x], [sum_x, sum_x2]]
    # Matriz dos termos independentes
    B = [sum_y, sum_xy]

    return np.linalg.solve(A, B)

# exemplo:
x = [0.0344, 0.1858, 0.2435, 0.3745, 0.5536, 0.6751, 0.8028, 0.8589, 0.9756, 1.1554, 1.2244, 1.4161, 1.4686, 1.625, 1.7084, 1.8646, 1.942, 2.1192, 2.1776, 2.3171, 2.4439, 2.5357, 2.674, 2.8345, 2.8982, 3.1172, 3.1747, 3.3139, 3.3797, 3.5241, 3.6982, 3.7744, 3.9743, 4.0273, 4.2119, 4.2465, 4.3736, 4.5758, 4.6405, 4.7177, 4.8348, 5.0292, 5.112, 5.2404, 5.337, 5.4244, 5.6207, 5.7197, 5.8998, 5.9667, 6.0826, 6.2157, 6.2957, 6.449, 6.5829, 6.6638, 6.7688, 6.9013, 7.1042, 7.1794, 7.2336, 7.3907, 7.5714, 7.6415, 7.8148, 7.9017, 8.0723, 8.1335, 8.2069, 8.4003, 8.4935, 8.6665, 8.7145, 8.8083, 8.9287, 9.1194, 9.1616, 9.2942, 9.4036, 9.5551, 9.7471, 9.7673, 9.9849]

y = [1.8818, 1.4587, 1.4672, 1.3777, 1.9214, 1.622, 1.7197, 1.5938, 1.7519, 1.5119, 1.5917, 1.406, 1.4376, 1.4384, 1.4806, 1.5014, 1.739, 1.6895, 1.7314, 0.5322, 1.7759, -0.0149, 1.9172, 1.4731, 1.6289, 1.8925, 1.5257, 0.7419, 1.4176, 1.5692, 1.9072, 1.622, 1.8099, 1.4526, 2.7183, 1.5816, 1.7939, 2.8446, 2.6894, 1.7105, 1.85, 1.9662, 0.2369, 1.842, 2.0382, 1.7543, 2.093, 2.0635, 1.8709, 1.8157, 2.1167, 2.7962, 1.7985, 2.1989, 2.2645, 1.8021, 1.9761, 1.6206, 2.2878, 2.1743, 2.2377, 3.483, 2.1048, 1.8769, 1.9872, 2.6313, 1.9027, 2.084, 1.9278, 2.5713, 2.2068, 2.2445, 2.1288, 2.8872, 2.3173, 2.3233, 2.3009, 2.0456, 2.0462, 2.8971, 2.3657, 2.1808, 3.37]

a0, a1 = best_line(x, y)

print(f'{a0 = } e {a1 = }')